/*Q95: Check if one string is a rotation of another.*/

#include <stdio.h>
#include <string.h>
int main() {
    char str1[100], str2[100], temp[200];

    printf("Enter first string: ");
    fgets(str1, sizeof(str1), stdin);
    str1[strcspn(str1, "\n")] = '\0'; 

    printf("Enter second string: ");
    fgets(str2, sizeof(str2), stdin);
    str2[strcspn(str2, "\n")] = '\0'; 

    if (strlen(str1) != strlen(str2)) {
        printf("Not a rotation.\n");
        return 0;
    }

    strcpy(temp, str1);
    strcat(temp, str1);

    if (strstr(temp, str2))
        printf("Yes, it is a rotation.\n");
    else
        printf("Not a rotation.\n");

    return 0;
}




/*Q96: Reverse each word in a sentence without changing the word order.*/

#include <stdio.h>
#include <string.h>

void reverseWord(char str[], int start, int end) {
    char temp;
    while (start < end) {
        temp = str[start];
        str[start] = str[end];
        str[end] = temp;
        start++;
        end--;
    }
}

int main() {
    char str[200];
    int i, start = 0, end, len;
    printf("Enter a sentence: ");
    fgets(str, sizeof(str), stdin);
    str[strcspn(str, "\n")] = '\0';  // remove newline

    len = strlen(str);
    for (i = 0; i <= len; i++) {
        
        if (str[i] == ' ' || str[i] == '\0') {
            end = i - 1;
            reverseWord(str, start, end);
            start = i + 1;
        }
    }
    printf("Reversed sentence (each word reversed): %s\n", str);
    return 0;
}
