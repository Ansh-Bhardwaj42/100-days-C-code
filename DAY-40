/*Q79: Perform diagonal traversal of a matrix.*/

#include <stdio.h>
int main() {
    int arr[10][10];
    int rows, cols, i, j;

    printf("Enter number of rows: ");
    scanf("%d", &rows);
    printf("Enter number of columns: ");
    scanf("%d", &cols);

    printf("Enter elements of the matrix:\n");
    for(i = 0; i < rows; i++) {
        for(j = 0; j < cols; j++) {
            scanf("%d", &arr[i][j]);
        }
    }

    printf("Diagonal traversal of the matrix:\n");
    for(int k = 0; k < rows + cols - 1; k++) {
        for(i = 0; i < rows; i++) {
            j = k - i;
            if(j >= 0 && j < cols) {
                printf("%d ", arr[i][j]);
            }
        }
        printf("\n");
    }
    return 0;
}



/*Q80: Multiply two matrices.*/

#include <stdio.h>
int main() {
    int a[10][10], b[10][10], product[10][10];
    int r1, c1, r2, c2;
    int i, j, k;

    printf("Enter number of rows and columns of first matrix: ");
    scanf("%d %d", &r1, &c1);
    printf("Enter number of rows and columns of second matrix: ");
    scanf("%d %d", &r2, &c2);
    if(c1 != r2) {
        printf("Matrix multiplication not possible (columns of first != rows of second).\n");
        return 0;
    }

    printf("Enter elements of first matrix:\n");
    for(i = 0; i < r1; i++) {
        for(j = 0; j < c1; j++) {
            scanf("%d", &a[i][j]);
        }
    }
    printf("Enter elements of second matrix:\n");
    for(i = 0; i < r2; i++) {
        for(j = 0; j < c2; j++) {
            scanf("%d", &b[i][j]);
        }
    }

    for(i = 0; i < r1; i++) {
        for(j = 0; j < c2; j++) {
            product[i][j] = 0;
        }
    }

    for(i = 0; i < r1; i++) {
        for(j = 0; j < c2; j++) {
            for(k = 0; k < c1; k++) {
                product[i][j] += a[i][k] * b[k][j];
            }
        }
    }

    printf("Product of the two matrices:\n");
    for(i = 0; i < r1; i++) {
        for(j = 0; j < c2; j++) {
            printf("%d ", product[i][j]);
        }
        printf("\n");
    }
    return 0;
}
